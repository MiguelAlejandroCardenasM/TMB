"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ViewMode;
(function (ViewMode) {
    ViewMode["normal"] = "normal";
    ViewMode["compact"] = "compact";
})(ViewMode = exports.ViewMode || (exports.ViewMode = {}));
exports.SideNavActionContext = React.createContext(null);
exports.SideNavContext = React.createContext(null);
exports.SideNav = function (props) {
    var _a = React.useState({ selectedPath: props.defaultSelectedPath || '', mode: props.mode || ViewMode.normal }), state = _a[0], setState = _a[1];
    var onSelectionPathSelected = function (path, selectionData) {
        if (props.onSelection) {
            props.onSelection(path, selectionData);
        }
        setState(function (currentState) {
            return __assign({}, currentState, { selectedPath: path });
        });
    };
    React.useEffect(function () {
        if (props.mode) {
            setState(__assign({}, state, { mode: props.mode }));
        }
    }, [props.mode]);
    return (React.createElement(exports.SideNavContext.Provider, { value: state },
        React.createElement(exports.SideNavActionContext.Provider, { value: { onSelectionPathSelected: onSelectionPathSelected } },
            React.createElement("aside", { "data-selected-path": state.selectedPath, "data-testid": 'sidenav-root' }, props.children))));
};
