import * as React from 'react';
export declare enum ViewMode {
    normal = "normal",
    compact = "compact"
}
interface ISelectionPathData<P = {}> {
    id: string;
    level: number;
    isLeaf: boolean;
    payload?: P;
}
declare type OnSelectionListener = (selectionPath: string, selectionPathData: ISelectionPathData) => void;
export interface ISideNavContext {
    selectedPath: string;
    mode?: ViewMode;
    /**
     * Path separator to use for selectionPath
     * Default is |
     */
    pathSeparator?: string;
}
export interface ISideNavActionContext {
    onSelectionPathSelected: (path: string, selectionPathData: ISelectionPathData) => void;
}
export declare const SideNavActionContext: React.Context<ISideNavActionContext>;
export declare const SideNavContext: React.Context<ISideNavContext>;
interface ISideNavProp {
    onSelection?: OnSelectionListener;
    mode?: ViewMode;
    defaultSelectedPath?: string;
}
export declare const SideNav: React.FC<ISideNavProp>;
export {};
